                                                                                
                                                                                
--==============================================================================
-- Some hidden parameters that may be modified by the user if really necessary. 
Config = {                                                                      
   -- The following MinShift and MaxShift parameters can be used to adapt the   
   -- responsivity and amplitude of the specific analyzer outputs. The MinShift 
   -- value shifts the lower bound and the MaxShift value the upper bound of    
   -- the corresponding rating. It does not change the codomain of the ratings  
   -- (which are always in the range [0,100]), but how the different ratings    
   -- react. Reasonable values for these parameters are within the range        
   -- [-1.0 .. 1.0] whereas the constraint MinShift - MaxShift < 1.0 must       
   -- always be true.                                                           
   -- For example if a certain rating is always in the range [30, 100] it       
   -- might be a good choice to set the corresponding MinShift to 0.3. On the   
   -- other side if a rating does only show values in the range [0, 20] it      
   -- might be better to set MinShift to -1 and MaxShift to -0.8.               
   Angry          = { MinShift = 0, MaxShift = 0 },                             
   Happy          = { MinShift = 0, MaxShift = 0 },                             
   Sad            = { MinShift = 0, MaxShift = 0 },                             
   Surprised      = { MinShift = 0, MaxShift = 0 },                             
   RightEyeClosed = { MinShift = 0, MaxShift = 0 },                             
   LeftEyeClosed  = { MinShift = 0, MaxShift = 0 },                             
   MouthOpen      = { MinShift = 0, MaxShift = 0 },                             
                                                                                
   -- The following MaleAttenuation and FemaleAttenuation parameters can be     
   -- modified to adapt the responsivity of the Male and Female rating for      
   -- analyzing the gender of faces. Valid ranges are [0, 1[. The higher the    
   -- attenuation, the lower is the responsivity of the corresponding rating.   
   Gender = { MaleAttenuation = 0, FemaleAttenuation = 0.15 },                  
                                                                                
   -- The following MinMatch and MaxViewCount parameters can be used to adapt   
   -- the behaviour of the id memory module. MinMatch specifies the minimal     
   -- matching score of two faces to consider them as the same person (the      
   -- reasonable range is about [40, 70] for the used model). MaxViewCount      
   -- specifies the maximum number of views memorized for one sample in the     
   -- gallery. The higher it is the more time consuming is the process.         
   ObjectId = { MinMatch = 55, MaxViewCount = 15 },                             
}                                                                               
--==============================================================================
                                                                                
                                                                                
--==============================================================================
function CreateFaceEngine( timeBase,                                            
                           updateTimeBase,                                      
                           threadCount,                                         
                           modelType,                                           
                           imageScale,                                          
                           minFaceSize,                                         
                           minFaceScore,                                        
                           idMemoryLength,                                      
                           idMemoryType,                                        
                           trackFaces,                                          
                           phantomTrap,                                         
                           searchEyes,                                          
                           searchNose,                                          
                           searchMouth,                                         
                           analyzeEyes,                                         
                           analyzeMouth,                                        
                           analyzeGender,                                       
                           analyzeAge,                                          
                           analyzeHappy,                                        
                           analyzeSad,                                          
                           analyzeSurprised,                                    
                           analyzeAngry,                                        
                           gallery )                                            
                                                                                
   -- Check whether the version of the script and Shore fit together!           
   if Version() ~= "Shore 1.4.0" then                                         
      Warning( "CreateFaceEngine", "SHORE version and setup script differ" )
   end                                                                          
                                                                                
   -- Lifes the time base between 0.0 and 10.0?                                 
   if timeBase < 0.0 or timeBase > 10.0 then                                    
      Error( "CreateFaceEngine", "invalid time base" )                      
      return nil                                                                
   end                                                                          
                                                                                
   -- Is thread count smaller than 10?                                          
   if threadCount < 1 or threadCount > 10 then                                  
      Error( "CreateFaceEngine", "invalid thread count" )                   
      return nil                                                                
   end                                                                          
                                                                                
   -- Do we have a correct model?                                               
   if ModelType[modelType] == nil then                                          
      Error( "CreateFaceEngine", "invalid model type, please use " ..       
                                 "Face.Front, Face.Rotated or Face.Profile" ) 
      return nil                                                                
   end                                                                          
                                                                                
   -- Is the image scale valid?                                                 
   if imageScale <= 0.0 or imageScale > 3 then                                  
      Error( "CreateFaceEngine", "imageScale must be in the range ]0,3]" )  
      return nil                                                                
   end                                                                          
                                                                                
   -- Is the min face size greater than or equal to 0.0?                        
   if minFaceSize < 0.0 then                                                    
      Error( "CreateFaceEngine", "invalid min face size" )                  
      return nil                                                                
   end                                                                          
                                                                                
   -- Is the memory for id tracking greater than 0.0?                           
   if idMemoryLength < 0.0 or idMemoryLength > 180.0 then                       
      Error( "CreateFaceEngine", "invalid id memory length" )               
      return nil                                                                
   end                                                                          
                                                                                
   -- Is the id memory type valid?                                              
   if IdMemoryType[idMemoryType] == nil then                                    
      Error( "CreateFaceEngine", "invalid id memory type" )                 
      return nil                                                                
   end                                                                          
                                                                                
   -- Is the phantomTrap string valid?                                          
   if not ( phantomTrap == 'Off'  or                                            
            phantomTrap == 'Delete' or                                          
            phantomTrap == 'Mark' or                                            
            phantomTrap == 'Debug' ) then                                       
      Error( "CreateFaceEngine", "invalid value for parameter phantomTrap" )
      return nil                                                                
   end                                                                          
                                                                                
   -- Are analyzers used without the eye fine search?                           
   if searchEyes == false and ( analyzeEyes      == true or                     
                                analyzeMouth     == true or                     
                                analyzeGender    == true or                     
                                analyzeAge       == true or                     
                                analyzeHappy     == true or                     
                                analyzeSad       == true or                     
                                analyzeSurprised == true or                     
                                analyzeAngry     == true ) then                 
      Remark( "CreateFaceEngine",                                             
                          [[You will analyze faces without the use of the eye   
                            fine search. This configuration can produce poorer  
                            analysis results.]] )                               
   end                                                                          
                                                                                
   -- Check gallery parameter                                                   
   if gallery then                                                              
      if type( gallery ) ~= 'string' then                                       
         Error( "CreateFaceEngine", "gallery parameter is not a string" )   
         return nil                                                             
      end                                                                       
                                                                                
      if not tonumber( gallery, 16 ) then                                       
         Error( "CreateFaceEngine", "invalid gallery parameter" )           
         return nil                                                             
      elseif tonumber( gallery, 16 ) == 0 then                                  
         gallery = nil                                                          
      end                                                                       
   end                                                                          
                                                                                
   -- Create a new engine                                                       
   engine = NewEngine()                                                         
                                                                                
   -- Add image size module                                                     
   engine:AddImageSize( "ImageWidth", "ImageHeight" )                       
                                                                                
   -- Add the optional image resizer                                            
   if imageScale ~= 1.0 then                                                    
      engine:AddImageResizer( imageScale )                                      
   end                                                                          
                                                                                
   -- Add the mean filter to the engine TODO: rename to AddMeanFilter           
   engine:AddMeanFilterConverter()                                              
                                                                                
   -- Face module is always added and needed by the following optional modules  
   AddFaceScanner( engine,                                                      
                   timeBase,                                                    
                   updateTimeBase,                                              
                   threadCount,                                                 
                   modelType,                                                   
                   imageScale,                                                  
                   minFaceSize,                                                 
                   minFaceScore,                                                
                   trackFaces,                                                  
                   phantomTrap  )                                               
                                                                                
   -- Reset the image to the original one, because the analysis modules perform 
   -- better on non mean filtered images.                                       
   engine:AddPatternResetter()                                                  
                                                                                
   -- Optional eye fine search                                                  
   if searchEyes == true then                                                   
      AddEyeScanner(   engine, timeBase, updateTimeBase, threadCount )          
   end                                                                          
                                                                                
   -- Optional nose fine search                                                 
   if searchNose == true then                                                   
      AddNoseScanner(  engine, timeBase, updateTimeBase, threadCount )          
   end                                                                          
                                                                                
   -- Optional mouth fine search                                                
   if searchMouth == true then                                                  
      AddMouthScanner( engine, timeBase, updateTimeBase, threadCount )          
   end                                                                          
                                                                                
   -- Add track id and optional links to the object after finesearch modules    
   AddObjectId( engine, timeBase, updateTimeBase, idMemoryLength, idMemoryType )
                                                                                
   -- Optional eyes open/closed classification                                  
   if analyzeEyes == true then                                                  
      AddEyeAnalyzer(       engine, timeBase, updateTimeBase )                  
   end                                                                          
                                                                                
   -- Optional mouth open/closed classification                                 
   if analyzeMouth == true then                                                 
      AddMouthAnalyzer(     engine, timeBase, updateTimeBase )                  
   end                                                                          
                                                                                
   -- Optional gender classification                                            
   if analyzeGender == true then                                                
      AddGenderAnalyzer(    engine, timeBase, updateTimeBase )                  
   end                                                                          
                                                                                
   -- Optional age estimation                                                   
   if analyzeAge == true then                                                   
      AddAgeAnalyzer(    engine, timeBase, updateTimeBase )                     
   end                                                                          
                                                                                
   -- Optional happy classification                                             
   if analyzeHappy == true then                                                 
      AddHappyAnalyzer(     engine, timeBase, updateTimeBase )                  
   end                                                                          
                                                                                
   -- Optional sad classification                                               
   if analyzeSad == true then                                                   
      AddSadAnalyzer(       engine, timeBase, updateTimeBase )                  
   end                                                                          
                                                                                
   -- Optional surprised classification                                         
   if analyzeSurprised == true then                                             
      AddSurprisedAnalyzer( engine, timeBase, updateTimeBase )                  
   end                                                                          
                                                                                
   -- Optional angry classification                                             
   if analyzeAngry == true then                                                 
      AddAngryAnalyzer(     engine, timeBase, updateTimeBase )                  
   end                                                                          
                                                                                
   -- Optional identification                                                   
   if gallery then                                                              
      AddIdentification( engine, gallery )                                      
   end                                                                          
                                                                                
   -- Add image count module                                                    
   engine:AddImageCount( "ImageCount", 1 )                                    
                                                                                
   -- Measuring the frame rate makes only sense in video mode                   
   if timeBase > 0 then                                                         
      if updateTimeBase == true then                                            
         engine:AddImageRate( "FrameRate", timeBase, 1.0 )                    
      else                                                                      
         engine:AddImageRate( "FrameRate", timeBase, 0.0 )                    
      end                                                                       
   end                                                                          
                                                                                
   -- Resize the content to the original image size if the image was resized    
   if imageScale ~= 1.0 then                                                    
      engine:AddContentResizer( 1 / imageScale )                                
   end                                                                          
                                                                                
   -- Make the object types and attributes consistent!                          
   engine:AddObjectAccess(                                                      
      "Object.Type ~= 'Face.Tracked'",                                        
      [[                                                                        
         Object.Type = 'Face'                                                   
         Object.Attribute.Roll  = Object.Attribute.Roll  or '0'                 
         Object.Attribute.Pitch = Object.Attribute.Pitch or '0'                 
         Object.Attribute.Yaw   = Object.Attribute.Yaw   or '0'                 
      ]]                                                                        
   )                                                                            
                                                                                
   -- Add the render options in the demo mode                                   
   if demo == true then                                                         
      SetRenderOptions( engine,                                                 
                        timeBase,                                               
                        updateTimeBase,                                         
                        threadCount,                                            
                        modelType,                                              
                        minFaceSize,                                            
                        minFaceScore,                                           
                        idMemoryLength,                                         
                        idMemoryType,                                           
                        trackFaces,                                             
                        searchEyes,                                             
                        searchNose,                                             
                        searchMouth,                                            
                        analyzeEyes,                                            
                        analyzeMouth,                                           
                        analyzeGender,                                          
                        analyzeAge,                                             
                        analyzeHappy,                                           
                        analyzeSad,                                             
                        analyzeSurprised,                                       
                        analyzeAngry )                                          
   end                                                                          
                                                                                
   return engine                                                                
end                                                                             
                                                                                
                                                                                
--==============================================================================
--==============================================================================
--==============================================================================
--                                                                              
-- The following functions are helpers which are used in the engine create      
-- function above. They only add specific functionalities to the provided       
-- engine. In most of the functions internal parameters are defined, which      
-- could also be customized or adapted to special needs. All these parameters   
-- are choosen to fit for most applications. Whether it makes sense to modify   
-- them depends on the requirements.                                            
--                                                                              
--==============================================================================
--==============================================================================
--==============================================================================
                                                                                
                                                                                
--==============================================================================
ModelType =                                                                     
{                                                                               
   ['Face.Front']       =                                                       
   {                                                                            
      ModelName         = "FaceFront_24x24_2008_08_29_161712_7",              
      CombThreshold     = -30,                                                  
      ObjectSelector    = "Object.Type == 'Face.Front'",                      
      TrackingActivator = "Object.Rating.Score > 25",                         
      ObjectModifier    = "",                                                 
      RenderOptions     = "",                                                 
   },                                                                           
                                                                                
   ['Face.Rotated']     =                                                       
   {                                                                            
      ModelName         = "FaceRotated_24x24_2008_10_15_180432_24",           
      CombThreshold     = -30,                                                  
      ObjectSelector    = "Object.Type == 'Face'",                            
      TrackingActivator = "Object.Rating.Score > 32",                         
      ObjectModifier    = [[                                                    
         rot = Object.Attribute.Rotation                                        
         Object.Attribute.Rotation = nil                                        
                                                                                
         if rot == "[-15]" or rot == "[0]" or rot == "[15]" then          
            Object.Type = "Face.Front"                                        
         else                                                                   
            Object.Type = "Face.Front.Rotated"                                
         end                                                                    
                                                                                
         -- Remove the paranthesis '[]'                                         
         Object.Attribute.Roll = string.sub( rot, 2, -2 )                       
      ]],                                                                       
      RenderOptions     = [[                                                    
         Object.Attribute._AttributeDisplay_Roll = "On"                       
      ]]                                                                        
                                                                                
   },                                                                           
                                                                                
   ['Face.Profile']     =                                                       
   {                                                                            
      ModelName         = "Face_24x24_2009_09_02_185611_48",                  
      CombThreshold     = -30,                                                  
      ObjectSelector    = "Object.Type == 'Face'",                            
      TrackingActivator = "Object.Rating.Score > 65",                         
      ObjectModifier    = [[                                                    
         yaw = Object.Attribute.Yaw                                             
                                                                                
         if yaw == "0" or yaw == "-45" or yaw == "45" then                
            Object.Type = "Face.Front"                                        
         else                                                                   
            Object.Type = "Face.Profile"                                      
         end                                                                    
      ]],                                                                       
      RenderOptions     = [[                                                    
         Object.Attribute._AttributeDisplay_Yaw   = "On"                      
                                                                                
         if Object.Attribute.Yaw == '-90' or                                    
            Object.Attribute.Yaw == '90' then                                   
            Object.Attribute._AttributeDisplay_Pitch = "On"                   
         end                                                                    
      ]]                                                                        
   }                                                                            
}                                                                               
                                                                                
                                                                                
--==============================================================================
IdMemoryType =                                                                  
{                                                                               
   Spatial =                                                                    
   {                                                                            
   },                                                                           
   Recent  =                                                                    
   {                                                                            
      splitUpLinks = true,                                                      
      keepAllLinks = false,                                                     
      idKey        = "RecentId_"                                              
   },                                                                           
   All     =                                                                    
   {                                                                            
      splitUpLinks = false,                                                     
      keepAllLinks = true,                                                      
      idKey        = "PreviousIds"                                            
   }                                                                            
}                                                                               
                                                                                
                                                                                
--==============================================================================
function SetRenderOptions( engine,                                              
                           timeBase,                                            
                           updateTimeBase,                                      
                           threadCount,                                         
                           modelType,                                           
                           minFaceSize,                                         
                           minFaceScore,                                        
                           idMemoryLength,                                      
                           idMemoryType,                                        
                           trackFaces,                                          
                           searchEyes,                                          
                           searchNose,                                          
                           searchMouth,                                         
                           analyzeEyes,                                         
                           analyzeMouth,                                        
                           analyzeGender,                                       
                           analyzeAge,                                          
                           analyzeHappy,                                        
                           analyzeSad,                                          
                           analyzeSurprised,                                    
                           analyzeAngry )                                       
   -- Turn everything off as default                                            
   local display =                                                              
   [[                                                                           
      Object.Attribute._RatingDisplay    = "Off"                              
      Object.Attribute._TypeDisplay      = "Off"                              
      Object.Attribute._MarkerDisplay    = "Off"                              
      Object.Attribute._AttributeDisplay = "Off"                              
   ]]                                                                           
                                                                                
   if timeBase > 0.0 then                                                       
      display = display .. [[                                                   
         Object.Attribute.Uptime =                                              
            string.format( "%.2f", Object.Rating.Uptime )                     
                                                                                
         Object.Attribute._AttributeDisplay_Uptime    = "On"                  
         Object.Attribute._AttributeDisplay_Id        = "On"                  
      ]]                                                                        
                                                                                
      if idMemoryLength > 0.0 then                                              
         if idMemoryType == "Recent" then                                     
            -- Show at most 3 links in the demo program!                        
            display = display .. [[                                             
               Object.Attribute._AttributeDisplay_RecentId_0 = "On"           
               Object.Attribute._AttributeDisplay_RecentId_1 = "On"           
               Object.Attribute._AttributeDisplay_RecentId_2 = "On"           
               Object.Attribute._AttributeDisplay_Uptime     = "Off"          
            ]]                                                                  
         elseif idMemoryType == "All" then                                    
            display = display .. [[                                             
               Object.Attribute._AttributeDisplay_PreviousIds = "On"          
               Object.Attribute._AttributeDisplay_Uptime      = "Off"         
            ]]                                                                  
         end                                                                    
      end                                                                       
   end                                                                          
                                                                                
   -- Add the model type related render options                                 
   display = display .. ModelType[modelType].RenderOptions                      
                                                                                
   if trackFaces == true then                                                   
      display = display .. [[                                                   
         if Object.Type == "Face.Tracked" then                                
            Object.Attribute._TypeDisplay = "On"                              
         end                                                                    
      ]]                                                                        
   end                                                                          
                                                                                
   if phantomTrap == "Mark" then                                              
      display = display .. [[                                                   
         Object.Attribute._AttributeDisplay_Phantom = "On"                    
         if Object.Attribute.Phantom == "Yes" then                            
            Object.Attribute._RegionColor = '0,0,0'                             
         end                                                                    
      ]]                                                                        
   end                                                                          
                                                                                
   if searchEyes == true then                                                   
      display = display .. [[                                                   
         if Object.Part.LeftEye ~= nil then                                     
            Object.Part.LeftEye.Attribute._RatingDisplay = "Off"              
            Object.Part.LeftEye.Attribute._TypeDisplay   = "Off"              
            Object.Part.LeftEye.Attribute._MarkerDisplay = "Off"              
         end                                                                    
                                                                                
         if Object.Part.RightEye ~= nil then                                    
            Object.Part.RightEye.Attribute._RatingDisplay = "Off"             
            Object.Part.RightEye.Attribute._TypeDisplay   = "Off"             
            Object.Part.RightEye.Attribute._MarkerDisplay = "Off"             
         end                                                                    
      ]]                                                                        
   end                                                                          
                                                                                
   if searchNose == true then                                                   
      display = display .. [[                                                   
         if Object.Part.Nose ~= nil then                                        
            Object.Part.Nose.Attribute._RatingDisplay = "Off"                 
            Object.Part.Nose.Attribute._TypeDisplay   = "Off"                 
            Object.Part.Nose.Attribute._MarkerDisplay = "Off"                 
         end                                                                    
      ]]                                                                        
   end                                                                          
                                                                                
   if searchMouth == true then                                                  
      display = display .. [[                                                   
         if Object.Part.Mouth ~= nil then                                       
            Object.Part.Mouth.Attribute._RatingDisplay = "Off"                
            Object.Part.Mouth.Attribute._TypeDisplay   = "Off"                
            Object.Part.Mouth.Attribute._MarkerDisplay = "Off"                
         end                                                                    
      ]]                                                                        
   end                                                                          
                                                                                
   if analyzeEyes == true then                                                  
      display = display .. [[                                                   
         if Object.Rating.LeftEyeClosed ~= nil then                             
            Object.Attribute._MarkerDisplay_LeftEye      = "On"               
            Object.Attribute._MarkerScale_LeftEye        = 0.5                  
                                                                                
            if Object.Rating.LeftEyeClosed > 60 then                            
               Object.Attribute._MarkerCharacter_LeftEye = "-"                
            else                                                                
               Object.Attribute._MarkerCharacter_LeftEye = "o"                
            end                                                                 
         end                                                                    
                                                                                
         if Object.Part.LeftEye ~= nil then                                     
            Object.Part.LeftEye.Attribute._RegionDisplay = "Off"              
         end                                                                    
                                                                                
         if Object.Rating.RightEyeClosed ~= nil then                            
            Object.Attribute._MarkerDisplay_RightEye      = "On"              
            Object.Attribute._MarkerScale_RightEye        = 0.5                 
                                                                                
            if Object.Rating.RightEyeClosed > 60 then                           
               Object.Attribute._MarkerCharacter_RightEye = "-"               
            else                                                                
               Object.Attribute._MarkerCharacter_RightEye = "o"               
            end                                                                 
         end                                                                    
                                                                                
         if Object.Part.RightEye ~= nil then                                    
            Object.Part.RightEye.Attribute._RegionDisplay = "Off"             
         end                                                                    
      ]]                                                                        
   end                                                                          
                                                                                
   if analyzeMouth == true then                                                 
      display = display .. [[                                                   
         Object.Attribute._RatingDisplay_MouthOpen = "On"                     
      ]]                                                                        
   end                                                                          
                                                                                
   if analyzeGender == true then                                                
      display = display .. [[                                                   
         Object.Attribute._AttributeDisplay_Gender = "On"                     
                                                                                
         if Object.Attribute.Gender == 'Male' then                              
            Object.Attribute._RegionColor = '0,0,255'                           
         elseif Object.Attribute.Gender == 'Female' then                        
            Object.Attribute._RegionColor = '255,0,0'                           
         end                                                                    
      ]]                                                                        
   end                                                                          
                                                                                
   if analyzeAge == true then                                                   
      display = display .. [[                                                   
         Object.Attribute._AttributeDisplay_Age = "On"                        
                                                                                
         local age       = Object.Rating.Age                                    
         local deviation = Object.Rating.AgeDeviation                           
                                                                                
         if age and deviation then                                              
            Object.Attribute.Age = age .. " [+/-"  .. deviation .. "]"      
         end                                                                    
      ]]                                                                        
   end                                                                          
                                                                                
   if analyzeHappy == true then                                                 
      display = display .. [[                                                   
         Object.Attribute._RatingDisplay_Happy = "On"                         
      ]]                                                                        
   end                                                                          
                                                                                
   if analyzeSad == true then                                                   
      display = display .. [[                                                   
         Object.Attribute._RatingDisplay_Sad = "On"                           
      ]]                                                                        
   end                                                                          
                                                                                
   if analyzeSurprised == true then                                             
      display = display .. [[                                                   
         Object.Attribute._RatingDisplay_Surprised = "On"                     
      ]]                                                                        
   end                                                                          
                                                                                
   if analyzeAngry == true then                                                 
      display = display .. [[                                                   
         Object.Attribute._RatingDisplay_Angry = "On"                         
      ]]                                                                        
   end                                                                          
                                                                                
   -- Apply the render options to all kinds of objects.                         
   engine:AddObjectAccess( "true", display )                                  
end                                                                             
                                                                                
                                                                                
--==============================================================================
function AddFaceScanner( engine,                                                
                         timeBase,                                              
                         updateTimeBase,                                        
                         threadCount,                                           
                         modelType,                                             
                         imageScale,                                            
                         minFaceSize,                                           
                         minFaceScore,                                          
                         trackFaces,                                            
                         phantomTrap )                                          
                                                                                
   -- Type for tracked objects                                                  
   local trackingType = "Face.Tracked"                                        
                                                                                
   -- We must take the imageScale into account for minFaceSize                  
   if minFaceSize > 1 then                                                      
      -- Magic number 2 to leave min size greater than one                      
      minFaceSize = math.max( 2, imageScale * imageScale * minFaceSize )        
   end                                                                          
                                                                                
   -- Use the helper function                                                   
   AddObjectScanner(                                                            
      engine,                                                                   
      timeBase,                                                                 
      updateTimeBase,                                                           
      threadCount,                                                              
      minFaceSize,                                                              
      minFaceScore,                                                             
      trackFaces,                                                               
      trackingType,                                                             
      phantomTrap,                                                              
      modelType                                                                 
   )                                                                            
                                                                                
   -- Add the individual object modifier.                                       
   engine:AddObjectAccess(                                                      
      ModelType[modelType].ObjectSelector,                                      
      ModelType[modelType].ObjectModifier                                       
   )                                                                            
end                                                                             
                                                                                
                                                                                
--==============================================================================
function AddEyeScanner( engine, timeBase, updateTimeBase, threadCount )         
   -- Models for the search of the left and the right eye                       
   local leftEye  = "LeftEyeFront_16x16_2008_10_20_190938_4"                  
   local rightEye = "RightEyeFront_16x16_2008_10_20_190953_4"                 
                                                                                
   -- Workaround for the profile model: modify the object region depending      
   -- on the yaw value, to make the eye search more stable!                     
   engine:AddObjectAccess(                                                      
      "Object.Attribute.Yaw ~= nil",                                          
      [[                                                                        
         y = Object.Attribute.Yaw                                               
         a = Object.Region                                                      
         l = a.Left                                                             
         t = a.Top                                                              
         r = a.Right                                                            
         b = a.Bottom                                                           
                                                                                
         Object.Attribute.Region =                                              
            'return {' ..  'Left=' .. l ..  ',Top=' .. t ..                     
            ',Right=' .. r .. ',Bottom=' .. b .. '}'                            
                                                                                
         dw = 0.1 * ( r - l )                                                   
         dh = 0.1 * ( b - t )                                                   
                                                                                
         if y == '45' then                                                      
            a.Right  = r - 2.0 * dw                                             
            a.Left   = l - 1.0 * dw                                             
            a.Bottom = b - 1.0 * dh                                             
         elseif y == '0' then                                                   
            a.Right  = r - 0.5 * dw                                             
            a.Left   = l + 0.5 * dw                                             
            a.Bottom = b - 1.0 * dh                                             
         elseif y == '-45' then                                                 
            a.Right  = r + 1.0 * dw                                             
            a.Left   = l + 2.0 * dw                                             
            a.Bottom = b - 1.0 * dh                                             
         end                                                                    
   ]] )                                                                         
                                                                                
   -- Use the helper function for left eye scanner                              
   AddPartScanner(                                                              
      engine,                                                                   
      timeBase,                                                                 
      updateTimeBase,                                                           
      threadCount,                                                              
      0.4,                -- Region left border                                 
      -0.1,               -- Region top border                                  
      1.1,                -- Region right border                                
      0.6,                -- Region bottom border                               
      0.07,               -- Min size                                           
      0.5,                -- Max size                                           
      0,                  -- Min score                                          
      1.15,               -- Scale factor                                       
      "Face.Front",       -- Object type                                      
      leftEye,            -- Part model name                                    
      "LeftEye.Front",    -- Part type                                        
      "LeftEye",          -- Part key                                         
      -30                 -- Comb threshold                                     
   )                                                                            
                                                                                
   -- Use the helper function for right eye scanner                             
   AddPartScanner(                                                              
      engine,                                                                   
      timeBase,                                                                 
      updateTimeBase,                                                           
      threadCount,                                                              
      -0.1,               -- Region left border                                 
      -0.1,               -- Region top border                                  
      0.6,                -- Region right border                                
      0.6,                -- Region bottom border                               
      0.07,               -- Min size                                           
      0.5,                -- Max size                                           
      0,                  -- Min score                                          
      1.15,               -- Scale factor                                       
      "Face.Front",       -- Object type                                      
      rightEye,           -- Part model name                                    
      "RightEye.Front",   -- Part type                                        
      "RightEye",         -- Part key                                         
      -30                 -- Comb threshold                                     
   )                                                                            
                                                                                
   -- Workaround for the profile model: restore the original object region      
   engine:AddObjectAccess(                                                      
      "Object.Attribute.Yaw ~= nil",                                          
      [[                                                                        
         Object.Region = loadstring( Object.Attribute.Region )()                
         Object.Attribute.Region = nil                                          
      ]]                                                                        
   )                                                                            
                                                                                
   -- Copy the part eye markers to the object eye markers                       
   engine:AddObjectAccess(                                                      
      "Object.Type == 'Face.Front'",                                          
      [[                                                                        
         if Object.Part.LeftEye ~= nil then                                     
            Object.Marker.LeftEye = Object.Part.LeftEye.Marker.LeftEye          
            Object.Part.LeftEye.Marker.RightEye = nil                           
         end                                                                    
                                                                                
         if Object.Part.RightEye ~= nil then                                    
            Object.Marker.RightEye = Object.Part.RightEye.Marker.RightEye       
            Object.Part.RightEye.Marker.LeftEye = nil                           
         end                                                                    
      ]]                                                                        
   )                                                                            
end                                                                             
                                                                                
                                                                                
--==============================================================================
function AddNoseScanner( engine, timeBase, updateTimeBase, threadCount )        
   -- Model to search for noses                                                 
   local modelName = "NoseFront_16x16_2008_10_17_134731_4"                    
                                                                                
   -- Use the helper function                                                   
   AddPartScanner(                                                              
      engine,                                                                   
      timeBase,                                                                 
      updateTimeBase,                                                           
      threadCount,                                                              
      0.1,                -- Region left border                                 
      0.1,                -- Region top border                                  
      0.9,                -- Region right border                                
      0.9,                -- Region bottom border                               
      0.07,               -- Min size                                           
      0.5,                -- Max size                                           
      0,                  -- Min score                                          
      1.15,               -- Scale factor                                       
      "Face.Front",       -- Object type                                      
      modelName,          -- Part model name                                    
      "Nose.Front",       -- Part type                                        
      "Nose",             -- Part key                                         
      -30                 -- Comb threshold                                     
   )                                                                            
                                                                                
   -- Copy the part nose marker to the objects nose marker                      
   engine:AddObjectAccess(                                                      
      "Object.Type == 'Face.Front'",                                          
      [[                                                                        
         if Object.Part.Nose ~= nil then                                        
            Object.Part.Nose.Marker.LeftEye  = nil                              
            Object.Part.Nose.Marker.RightEye = nil                              
            Object.Marker.NoseTip = Object.Part.Nose.Marker.NoseTip             
         end                                                                    
      ]]                                                                        
   )                                                                            
end                                                                             
                                                                                
                                                                                
--==============================================================================
function AddMouthScanner( engine, timeBase, updateTimeBase, threadCount )       
   -- Model to search for mouths                                                
   local modelName = "MouthFront_16x14_2008_10_20_190419_4"                   
                                                                                
   -- Use the helper function                                                   
   AddPartScanner(                                                              
      engine,                                                                   
      timeBase,                                                                 
      updateTimeBase,                                                           
      threadCount,                                                              
      0.1,                -- Region left border                                 
      0.3,                -- Region top border                                  
      0.9,                -- Region right border                                
      1.2,                -- Region bottom border                               
      0.05,               -- Min size                                           
      0.8,                -- Max size                                           
      0,                  -- Min score                                          
      1.15,               -- Scale factor                                       
      "Face.Front",       -- Object type                                      
      modelName,          -- Part model name                                    
      "Mouth.Front",      -- Part type                                        
      "Mouth",            -- Part key                                         
      -30                 -- Comb threshold                                     
   )                                                                            
                                                                                
   -- Copy the part mouth markers to the objects mouth markers                  
   engine:AddObjectAccess(                                                      
      "Object.Type == 'Face.Front'",                                          
      [[                                                                        
         if Object.Part.Mouth ~= nil then                                       
            Object.Marker.LeftMouthCorner  =                                    
               Object.Part.Mouth.Marker.LeftMouthCorner                         
            Object.Marker.RightMouthCorner =                                    
               Object.Part.Mouth.Marker.RightMouthCorner                        
         end                                                                    
      ]]                                                                        
   )                                                                            
end                                                                             
                                                                                
                                                                                
--==============================================================================
function AddEyeAnalyzer( engine, timeBase, updateTimeBase )                     
   -- Only analyze "Face.Front" objects                                       
   local selector        = "Object.Type == 'Face.Front'"                      
                                                                                
   -- Model for the left and right eyes                                         
   local leftEye         = "LeftEyeClosed_16x16_2008_10_23_185544"            
   local rightEye        = "RightEyeClosed_16x16_2008_10_23_185544"           
                                                                                
   -- Identifier for score to use                                               
   local leftIdentifier  = "LeftEyeClosedScore"                               
   local rightIdentifier = "RightEyeClosedScore"                              
                                                                                
   -- Use the helper function                                                   
   AddAnalyzer(                                                                 
      engine,                                                                   
      timeBase,                                                                 
      updateTimeBase,                                                           
      leftEye,              -- Model name                                       
      selector,             -- Object selector                                  
      leftIdentifier,       -- Identifier                                       
      0.1,                  -- Length of the filter                             
      0.05,                 -- Stabilizer threshold in %                        
      -45, 35,              -- Modifier sourceA, sourceB                        
      Config.LeftEyeClosed.MinShift,                                            
      Config.LeftEyeClosed.MaxShift                                             
   )                                                                            
                                                                                
   -- Use the helper function                                                   
   AddAnalyzer(                                                                 
      engine,                                                                   
      timeBase,                                                                 
      updateTimeBase,                                                           
      rightEye,             -- Model name                                       
      selector,             -- Object selector                                  
      rightIdentifier,      -- Identifier                                       
      0.1,                  -- Length of the filter                             
      0.05,                 -- Stabilizer threshold in %                        
      -40, 40,              -- Modifier sourceA, sourceB                        
      Config.RightEyeClosed.MinShift,                                           
      Config.RightEyeClosed.MaxShift                                            
   )                                                                            
                                                                                
   -- Delete the LeftEyeScore and RightEyeScore form the object. Its only for   
   -- internal use.                                                             
   -- Copy the score the normale rating, if the score is used.                  
   if leftIdentifier == "LeftEyeClosedScore" then                             
      access =                                                                  
      [[                                                                        
         Object.Rating.LeftEyeClosed       = Object.Rating.LeftEyeClosedScore   
         Object.Rating.LeftEyeClosedScore  = nil                                
      ]]                                                                        
   else                                                                         
      access =                                                                  
      [[                                                                        
         Object.Rating.LeftEyeClosedScore  = nil                                
      ]]                                                                        
   end                                                                          
                                                                                
   -- Copy the score the normale rating, if the score is used.                  
   if rightIdentifier == "RightEyeClosedScore" then                           
      access = access ..                                                        
      [[                                                                        
         Object.Rating.RightEyeClosed      = Object.Rating.RightEyeClosedScore  
         Object.Rating.RightEyeClosedScore = nil                                
      ]]                                                                        
   else                                                                         
      access = access ..                                                        
      [[                                                                        
         Object.Rating.RightEyeClosedScore = nil                                
      ]]                                                                        
   end                                                                          
                                                                                
   engine:AddObjectAccess( selector, access )                                   
end                                                                             
                                                                                
                                                                                
--==============================================================================
function AddMouthAnalyzer( engine, timeBase, updateTimeBase )                   
   -- Only analyze "Face.Front" objects                                       
   local selector   = "Object.Type == 'Face.Front'"                           
                                                                                
   -- Model for mouth analysis                                                  
   local modelName  = "MouthOpen_16x14_2008_10_23_185229"                     
                                                                                
   -- Identifier for the score to use                                           
   local identifier = "MouthOpenScore"                                        
                                                                                
   -- Use the helper function                                                   
   AddAnalyzer(                                                                 
      engine,                                                                   
      timeBase,                                                                 
      updateTimeBase,                                                           
      modelName,                                                                
      selector,            -- Object selector                                   
      identifier,          -- Identifier                                        
      0.1,                 -- Length of the filter                              
      0.05,                -- Stabilizer threshold in %                         
      -15, 60,             -- Modifier sourceA, sourceB                         
      Config.MouthOpen.MinShift,                                                
      Config.MouthOpen.MaxShift                                                 
   )                                                                            
                                                                                
   -- Delete the HappyScore form object. Its only for internal use.             
   -- Copy the score the normale rating, if the score is used.                  
   if identifier == "MouthOpenScore" then                                     
      access =                                                                  
      [[                                                                        
         Object.Rating.MouthOpen = Object.Rating.MouthOpenScore                 
         Object.Rating.MouthOpenScore = nil                                     
      ]]                                                                        
   else                                                                         
      access =                                                                  
      [[                                                                        
         Object.Rating.MouthOpenScore = nil                                     
      ]]                                                                        
   end                                                                          
                                                                                
   engine:AddObjectAccess( selector, access )                                   
end                                                                             
                                                                                
                                                                                
--==============================================================================
function AddGenderAnalyzer( engine, timeBase, updateTimeBase )                  
   -- Only analyze "Face.Front" objects                                       
   local selector      = "Object.Type == 'Face.Front'"                        
   local modelName     = "Gender_26x26_2008_09_04_174103"                     
   local identifier    = "Gender"                                             
   local defaultValue  = ""                                                   
   local positiveLabel = "Female"                                             
   local positiveTime  = "FemaleTime"                                         
   local negativeLabel = "Male"                                               
   local negativeTime  = "MaleTime"                                           
                                                                                
   -- Additional video parameters                                               
   local minTrackOverlap = 0.2                                                  
   local minHistoryTime  = 0.5                                                  
                                                                                
   -- For the clarification name                                                
   local attributeKey = identifier                                              
                                                                                
   -- Ask for this model, maybe it can be load from file                        
   RequireModel( modelName )                                                    
                                                                                
   -- Add the basic analysis step                                               
   engine:AddAnalyzer( selector, modelName )                                    
                                                                                
   -- Take the user config for female into account                              
   engine:AddRatingModifier(                                                    
      selector,                                                                 
      positiveLabel,                                                            
      Config.Gender.FemaleAttenuation * 100, 100,                               
      0,  100,                                                                  
      true                                                                      
   )                                                                            
                                                                                
   -- Take the user config for male into account                                
   engine:AddRatingModifier(                                                    
      selector,                                                                 
      negativeLabel,                                                            
      Config.Gender.MaleAttenuation * 100, 100,                                 
      0,  100,                                                                  
      true                                                                      
   )                                                                            
                                                                                
   -- Single image mode                                                         
   if timeBase == 0.0 then                                                      
      -- In single mode just make a simple threshold classification of the      
      -- classification score and set the appropriate attribute                 
      engine:AddConditionalAttribute(                                           
         selector,                                                              
         attributeKey,                                                          
         defaultValue,                                                          
         "Object.Rating." .. positiveLabel ..                                 
            " >= Object.Rating." .. negativeLabel,                            
         positiveLabel,                                                         
         "Object.Rating." .. positiveLabel ..                                 
            " <  Object.Rating." .. negativeLabel,                            
         negativeLabel                                                          
      )                                                                         
   -- Video mode                                                                
   else                                                                         
      -- In the video mode do a simple filtering over time. That is measure     
      -- how long the classification produced the same result within a          
      -- given historyLength period                                             
      engine:AddObjectTimer(                                                    
         selector,                                                              
         minTrackOverlap,                                                       
         timeBase,                                                              
         updateTimeBase,                                                        
         "Object.Rating." .. positiveLabel ..                                 
            " >= Object.Rating." .. negativeLabel,                            
         positiveTime,                                                          
         0,    -- inital time                                                   
         false -- count down                                                    
      )                                                                         
                                                                                
      engine:AddObjectTimer(                                                    
         selector,                                                              
         minTrackOverlap,                                                       
         timeBase,                                                              
         updateTimeBase,                                                        
         "Object.Rating." .. positiveLabel ..                                 
            " <  Object.Rating." .. negativeLabel,                            
         negativeTime,                                                          
         0,    -- inital time                                                   
         false -- count down                                                    
      )                                                                         
                                                                                
      -- If the classification was more or less stable within the past          
      -- it is accepted as correct and the appropriate attribute is set         
      engine:AddBistableAttribute(                                              
            selector,                                                           
            minTrackOverlap,                                                    
            attributeKey,                                                       
            defaultValue,                                                       
            "Object.Rating." .. positiveTime .. " > " .. minHistoryTime ..  
            " and Object.Rating." .. positiveTime ..                          
               " > Object.Rating." .. negativeTime,                           
            positiveLabel,                                                      
            "Object.Rating." .. negativeTime .. " > " .. minHistoryTime ..  
            " and Object.Rating." .. negativeTime ..                          
               " > Object.Rating." .. positiveTime,                           
            negativeLabel                                                       
      )                                                                         
                                                                                
      -- The Female and Male scores are filtered over time. The score is the    
      -- ratio of Male/Female time and the sum of both times. The little        
      -- regularization constants prevents a division of zero.                  
      engine:AddObjectAccess(                                                   
         selector,                                                              
         [[                                                                     
            pt = Object.Rating.]] .. positiveTime .. [[                         
            nt = Object.Rating.]] .. negativeTime .. [[                         
                                                                                
            Object.Rating.]] .. positiveLabel ..                                
               [[ = pt / ( pt + nt + 0.00001  )  * 100                          
            Object.Rating.]] .. negativeLabel ..                                
               [[ = nt / ( pt + nt + 0.00001 )  * 100                           
            Object.Rating.]] .. positiveTime  .. [[ = nil                       
            Object.Rating.]] .. negativeTime  .. [[ = nil                       
         ]]                                                                     
      )                                                                         
   end                                                                          
                                                                                
   engine:AddObjectAccess(                                                      
      selector,                                                                 
      "Object.Rating." .. identifier .. " = nil"                            
   )                                                                            
end                                                                             
                                                                                
                                                                                
--==============================================================================
function AddAgeAnalyzer( engine, timeBase, updateTimeBase )                     
   -- Only analyze "Face.Front" objects                                       
   local selector = "Object.Type == 'Face.Front'"                             
                                                                                
   -- Model for happy analysis                                                  
   local modelName = "Age_28x28_2009_09_17_131241"                            
                                                                                
   -- Identifier for the score to use                                           
   local identifier          = "Age"                                          
   local deviationIdentifier = "AgeDeviation"                                 
                                                                                
   -- Additional video parameters                                               
   local minTrackOverlap     = 0.2                                              
   local filterLength        = 3 -- seconds                                     
   local stabilizerThreshold = 3 -- Min change in years for update              
                                                                                
   -- The identifiers of the used analyzer                                      
   local hiddenRatings =                                                        
   {                                                                            
      "ChildAgainstYoungAdultScore",                                          
      "ChildAgainstAdultScore",                                               
      "ChildAgainstSeniorScore",                                              
      "TeenagerAgainstAdultScore",                                            
      "TeenagerAgainstSeniorScore",                                           
      "YoungAdultAgainstSeniorScore"                                          
   }                                                                            
                                                                                
   -- Ask for this model, maybe it can be load from file                        
   RequireModel( modelName )                                                    
                                                                                
   -- Add the basic analysis step                                               
   engine:AddAnalyzer( selector, modelName )                                    
                                                                                
   local regression =                                                           
   [[                                                                           
   p =                                                                          
   {                                                                            
      Object.Rating.]] .. table.concat( hiddenRatings,                          
                                        ", Object.Rating." ) .. [[            
   }                                                                            
                                                                                
   -- Add the age rating                                                        
   Object.Rating.]] .. identifier .. [[ =                                       
                                                                                
   26.25834813297582 - 0.03398542701058983*p[1] +                               
   0.00030939708738947363*p[1]*p[1] + 3.7973194735198807e-6*p[1]*p[1]*p[1] -    
   0.08593892517874933*p[2] - 0.0007214440847450902*p[1]*p[2] +                 
   1.6137937444028646e-6*p[1]*p[1]*p[2] + 0.0002817621732772484*p[2]*p[2] +     
   1.7703899931999386e-6*p[1]*p[2]*p[2] + 3.906780376875867e-6*p[2]*p[2]*p[2] - 
   0.15753142440062912*p[3] - 0.00011130856685234601*p[1]*p[3] -                
   8.771861255999555e-7*p[1]*p[1]*p[3] - 0.0012740358689134433*p[2]*p[3] -      
   9.336561582089923e-6*p[1]*p[2]*p[3] + 2.5779779653818235e-6*p[2]*p[2]*p[3] - 
   0.00020011081988324927*p[3]*p[3] + 2.344179232376089e-6*p[1]*p[3]*p[3] -     
   3.954626834176238e-6*p[2]*p[3]*p[3] + 1.7921307438365966e-6*p[3]*p[3]*p[3] + 
   0.010787518996077885*p[4] + 0.00035362198620105364*p[1]*p[4] -               
   6.468063159004997e-6*p[1]*p[1]*p[4] + 0.00029964103220701143*p[2]*p[4] -     
   4.878050762366782e-7*p[1]*p[2]*p[4] - 9.549089309582939e-6*p[2]*p[2]*p[4] -  
   0.00005326404453024103*p[3]*p[4] + 0.000018662302656507002*p[1]*p[3]*p[4] +  
   7.766521860881592e-6*p[2]*p[3]*p[4] -                                        
   0.000014062016503944433*p[3]*p[3]*p[4] - 0.00016659429275962085*p[4]*p[4] -  
   1.8518821216634928e-6*p[1]*p[4]*p[4] - 1.9610248663773733e-7*p[2]*p[4]*p[4] +
   1.989475512730606e-6*p[3]*p[4]*p[4] + 1.451027225122485e-6*p[4]*p[4]*p[4] -  
   0.045726575161021604*p[5] - 0.00039263932529793157*p[1]*p[5] -               
   8.28119585497318e-6*p[1]*p[1]*p[5] + 0.000013103749289665199*p[2]*p[5] +     
   0.0000193677264758667*p[1]*p[2]*p[5] -                                       
   0.000014787623848140712*p[2]*p[2]*p[5] + 0.001316487022179716*p[3]*p[5] -    
   7.197181830730259e-6*p[1]*p[3]*p[5] +                                        
   0.000011258469730263253*p[2]*p[3]*p[5] +                                     
   3.844277776323309e-6*p[3]*p[3]*p[5] - 0.00017830465336906123*p[4]*p[5] -     
   7.387922798450229e-7*p[1]*p[4]*p[5] +                                        
   0.000010364104600648695*p[2]*p[4]*p[5] +                                     
   2.647921603872188e-6*p[3]*p[4]*p[5] - 3.965346101720004e-6*p[4]*p[4]*p[5] -  
   0.00013822249941274731*p[5]*p[5] - 6.3577398803925845e-6*p[1]*p[5]*p[5] +    
   3.6801319186434482e-6*p[2]*p[5]*p[5] - 6.363974832422622e-7*p[3]*p[5]*p[5] - 
   5.79007029306541e-6*p[4]*p[5]*p[5] + 4.588858856456545e-6*p[5]*p[5]*p[5] -   
   0.048130566929281006*p[6] - 0.00005115076434766916*p[1]*p[6] +               
   7.471066321022001e-6*p[1]*p[1]*p[6] + 0.00010825827061350972*p[2]*p[6] -     
   0.000010875885405470782*p[1]*p[2]*p[6] +                                     
   0.000011782757750828166*p[2]*p[2]*p[6] + 0.00017340738895029218*p[3]*p[6] -  
   4.8780822686185225e-6*p[1]*p[3]*p[6] - 3.330221622365936e-6*p[2]*p[3]*p[6] - 
   1.316676537724814e-7*p[3]*p[3]*p[6] + 0.00006491656640931562*p[4]*p[6] -     
   3.878611989587288e-6*p[1]*p[4]*p[6] - 3.822238484404569e-6*p[2]*p[4]*p[6] +  
   5.955871214491924e-6*p[3]*p[4]*p[6] - 3.2311340523530856e-7*p[4]*p[4]*p[6] + 
   0.0001300670591826367*p[5]*p[6] + 8.687574295568208e-6*p[1]*p[5]*p[6] -      
   8.431350287050582e-6*p[2]*p[5]*p[6] - 4.642067329780327e-6*p[3]*p[5]*p[6] +  
   6.924637219680254e-6*p[4]*p[5]*p[6] - 5.090186193899461e-6*p[5]*p[5]*p[6] +  
   0.000022220688298577992*p[6]*p[6] - 3.940696386365866e-7*p[1]*p[6]*p[6] -    
   1.0962668883965573e-7*p[2]*p[6]*p[6] + 2.9081726877265087e-6*p[3]*p[6]*p[6] -
   2.743090828207472e-6*p[4]*p[6]*p[6] + 3.7083924800671915e-6*p[5]*p[6]*p[6] - 
   4.923444810402835e-7*p[6]*p[6]*p[6]                                          
                                                                                
   if Object.Rating.]] .. identifier .. [[ < 0 then                             
      Object.Rating.]] .. identifier .. [[ = 0                                  
   end                                                                          
                                                                                
   -- Add the deviation rating                                                  
   Object.Rating.]] .. deviationIdentifier .. [[ =                              
   math.abs(                                                                    
   11.66910696374289 + 0.0072540124813574944*p[1] -                             
   0.00029851034956854467*p[1]*p[1] - 4.170063128305435e-7*p[1]*p[1]*p[1] +     
   0.028606500892683774*p[2] + 0.000023099918379543302*p[1]*p[2] -              
   1.511238802223004e-6*p[1]*p[1]*p[2] - 0.00012222726262869*p[2]*p[2] -        
   1.0890582175798627e-6*p[1]*p[2]*p[2] - 1.1607443821782295e-7*p[2]*p[2]*p[2] -
   0.01078154949631522*p[3] + 0.00023832860826422685*p[1]*p[3] +                
   6.774242116062913e-7*p[1]*p[1]*p[3] - 0.0003360792369717911*p[2]*p[3] -      
   2.1789626722957123e-7*p[1]*p[2]*p[3] - 2.0077576601783993e-6*p[2]*p[2]*p[3] -
   0.00020790942280086573*p[3]*p[3] - 4.5317180613691606e-7*p[1]*p[3]*p[3] +    
   4.3213197502044495e-6*p[2]*p[3]*p[3] - 5.452665311238187e-6*p[3]*p[3]*p[3] - 
   0.009996961013185274*p[4] - 0.0002797379787777379*p[1]*p[4] -                
   7.348367024425316e-6*p[1]*p[1]*p[4] + 0.0001694128462860908*p[2]*p[4] +      
   0.00001213184268641952*p[1]*p[2]*p[4] -                                      
   0.000010272068715434217*p[2]*p[2]*p[4] + 0.00010915414436504346*p[3]*p[4] +  
   7.66442735691289e-7*p[1]*p[3]*p[4] + 2.781088759285535e-6*p[2]*p[3]*p[4] +   
   1.506916338069751e-6*p[3]*p[3]*p[4] + 0.00004684794200064857*p[4]*p[4] -     
   2.679135177283016e-6*p[1]*p[4]*p[4] + 2.6722176035054657e-6*p[2]*p[4]*p[4] + 
   2.546865967691355e-7*p[3]*p[4]*p[4] + 2.70368588970226e-7*p[4]*p[4]*p[4] -   
   0.03484574229847804*p[5] + 0.0001585249349600465*p[1]*p[5] +                 
   5.222621907076528e-6*p[1]*p[1]*p[5] - 0.00021248380498718817*p[2]*p[5] -     
   3.635258629475026e-6*p[1]*p[2]*p[5] + 2.641008410063702e-6*p[2]*p[2]*p[5] -  
   0.000034705889486085096*p[3]*p[5] - 3.3907011394386042e-6*p[1]*p[3]*p[5] -   
   0.000012715303143293309*p[2]*p[3]*p[5] +                                     
   0.000010071911708755216*p[3]*p[3]*p[5] + 2.9612903214603114e-6*p[4]*p[5] +   
   2.6633103581393357e-6*p[1]*p[4]*p[5] + 3.752003230381219e-6*p[2]*p[4]*p[5] - 
   4.4331562474976255e-6*p[3]*p[4]*p[5] + 1.2940908989530589e-6*p[4]*p[4]*p[5] +
   0.00020750881597949016*p[5]*p[5] - 1.3795830114558634e-6*p[1]*p[5]*p[5] +    
   3.674909364269141e-6*p[2]*p[5]*p[5] - 3.677334425280199e-7*p[3]*p[5]*p[5] -  
   3.306903740686438e-6*p[4]*p[5]*p[5] + 1.4661922241791756e-6*p[5]*p[5]*p[5] - 
   0.024997511837191125*p[6] + 0.00002532296109475324*p[1]*p[6] +               
   2.0092644078792597e-6*p[1]*p[1]*p[6] + 0.00007546748061906312*p[2]*p[6] -    
   4.38622362544626e-6*p[1]*p[2]*p[6] + 7.802332300781497e-6*p[2]*p[2]*p[6] -   
   3.0679323974129404e-6*p[3]*p[6] - 5.585353669576179e-7*p[1]*p[3]*p[6] -      
   3.895810030686121e-7*p[2]*p[3]*p[6] + 2.3024391628579754e-7*p[3]*p[3]*p[6] - 
   0.000039367818552489026*p[4]*p[6] + 8.43244562273389e-7*p[1]*p[4]*p[6] -     
   1.8516189659672336e-6*p[2]*p[4]*p[6] + 4.437694833982883e-7*p[3]*p[4]*p[6] - 
   1.814585816592062e-6*p[4]*p[4]*p[6] - 0.00025004531493267576*p[5]*p[6] +     
   1.005483953175278e-6*p[1]*p[5]*p[6] - 4.140576784100047e-6*p[2]*p[5]*p[6] -  
   1.2459351039466982e-6*p[3]*p[5]*p[6] + 2.72904366290284e-6*p[4]*p[5]*p[6] -  
   6.485239304532996e-7*p[5]*p[5]*p[6] + 0.00010148212358758524*p[6]*p[6] +     
   8.87545329848593e-8*p[1]*p[6]*p[6] - 1.7546514086443537e-7*p[2]*p[6]*p[6] +  
   1.0568624923457477e-6*p[3]*p[6]*p[6] + 3.457787217122104e-7*p[4]*p[6]*p[6] + 
   1.0640695632790551e-6*p[5]*p[6]*p[6] - 4.3795768229358865e-7*p[6]*p[6]*p[6]  
   )                                                                            
                                                                                
   -- Remove the hidden rating                                                  
   Object.Rating.]] .. table.concat( hiddenRatings,                             
                                     " = nil; Object.Rating." ) .. [[ = nil   
   ]]                                                                           
                                                                                
   engine:AddObjectAccess( selector, regression )                               
                                                                                
   if timeBase > 0.0 then                                                       
      -- In the video mode do a simple filtering over time and stablize the     
      -- rating.                                                                
                                                                                
      -- For the age                                                            
      engine:AddRatingFilter(                                                   
         selector,                                                              
         minTrackOverlap,                                                       
         timeBase,                                                              
         updateTimeBase,                                                        
         filterLength,                                                          
         identifier                                                             
      )                                                                         
                                                                                
      engine:AddRatingStabilizer(                                               
         selector,                                                              
         minTrackOverlap,                                                       
         identifier,                                                            
         stabilizerThreshold                                                    
      )                                                                         
                                                                                
      -- For the deviation                                                      
      engine:AddRatingFilter(                                                   
         selector,                                                              
         minTrackOverlap,                                                       
         timeBase,                                                              
         updateTimeBase,                                                        
         filterLength,                                                          
         deviationIdentifier                                                    
      )                                                                         
                                                                                
      engine:AddRatingStabilizer(                                               
         selector,                                                              
         minTrackOverlap,                                                       
         deviationIdentifier,                                                   
         stabilizerThreshold                                                    
      )                                                                         
   end                                                                          
                                                                                
   -- Copy the rating to an attribute and delete the hidden identifiers.        
   engine:AddObjectAccess(                                                      
      selector,                                                                 
      [[                                                                        
         Object.Rating.]] .. identifier .. [[ =                                 
            math.floor( Object.Rating.]] .. identifier .. [[ + 0.5 )            
                                                                                
         Object.Rating.]] .. deviationIdentifier .. [[ =                        
            math.floor( Object.Rating.]] .. deviationIdentifier .. [[ + 0.5 )   
      ]]                                                                        
   )                                                                            
end                                                                             
                                                                                
                                                                                
--==============================================================================
function AddHappyAnalyzer( engine, timeBase, updateTimeBase )                   
   -- Only analyze "Face.Front" objects                                       
   local selector = "Object.Type == 'Face.Front'"                             
                                                                                
   -- Model for happy analysis                                                  
   local modelName = "Happy_26x26_2008_09_08_124526"                          
                                                                                
   -- Identifier for the score to use                                           
   local identifier = "HappyScore"                                            
                                                                                
   -- Use the helper function                                                   
   AddAnalyzer(                                                                 
      engine,                                                                   
      timeBase,                                                                 
      updateTimeBase,                                                           
      modelName,          -- Model name                                         
      selector,           -- Object selector                                    
      identifier,         -- Identifier                                         
      0.4,                -- Length of the filter                               
      0.04,               -- Stabilizer threshold in %                          
      -30, 60,            -- Modifier sourceA, sourceB                          
      Config.Happy.MinShift,                                                    
      Config.Happy.MaxShift                                                     
   )                                                                            
                                                                                
   -- Delete the HappyScore form object. Its only for internal use.             
   -- Copy the score the normale rating, if the score is used.                  
   if identifier == "HappyScore" then                                         
      access =                                                                  
      [[                                                                        
         Object.Rating.Happy = Object.Rating.HappyScore                         
         Object.Rating.HappyScore = nil                                         
      ]]                                                                        
   else                                                                         
      access =                                                                  
      [[                                                                        
         Object.Rating.HappyScore = nil                                         
      ]]                                                                        
   end                                                                          
                                                                                
   engine:AddObjectAccess( selector, access )                                   
end                                                                             
                                                                                
                                                                                
--==============================================================================
function AddSadAnalyzer( engine, timeBase, updateTimeBase )                     
   -- Only analyze "Face.Front" objects                                       
   local selector = "Object.Type == 'Face.Front'"                             
                                                                                
   -- Model for sad analysis                                                    
   local modelName = "Sad_26x26_2008_10_21_161703"                            
                                                                                
   -- Identifier for the score to use                                           
   local identifier = "SadScore"                                              
                                                                                
   -- Use the helper function                                                   
   AddAnalyzer(                                                                 
      engine,                                                                   
      timeBase,                                                                 
      updateTimeBase,                                                           
      modelName,          -- Model name                                         
      selector,           -- Object selector                                    
      identifier,         -- Identifier                                         
      0.4,                -- Length of the filter                               
      0.04,               -- Stabilizer threshold in %                          
      70, 150,            -- Modifier sourceA, sourceB                          
      Config.Sad.MinShift,                                                      
      Config.Sad.MaxShift                                                       
   )                                                                            
                                                                                
   -- Delete the SadScore form the object. Its only for internal use.           
   -- Copy the score the normale rating, if the score is used.                  
   if identifier == "SadScore" then                                           
      access =                                                                  
      [[                                                                        
         Object.Rating.Sad = Object.Rating.SadScore                             
         Object.Rating.SadScore = nil                                           
      ]]                                                                        
   else                                                                         
      access =                                                                  
      [[                                                                        
         Object.Rating.SadScore = nil                                           
      ]]                                                                        
   end                                                                          
                                                                                
   engine:AddObjectAccess( selector, access )                                   
end                                                                             
                                                                                
                                                                                
--==============================================================================
function AddSurprisedAnalyzer( engine, timeBase, updateTimeBase )               
   -- Only analyze "Face.Front" objects                                       
   local selector = "Object.Type == 'Face.Front'"                             
                                                                                
   -- Model for surprised analysis                                              
   local modelName = "Surprised_26x26_2008_09_11_175815"                      
                                                                                
   -- Identifier for the score to use                                           
   local identifier = "SurprisedScore"                                        
                                                                                
   -- Use the helper function                                                   
   AddAnalyzer(                                                                 
      engine,                                                                   
      timeBase,                                                                 
      updateTimeBase,                                                           
      modelName,          -- Model name                                         
      selector,           -- Object selector                                    
      identifier,         -- Identifier                                         
      0.4,                -- Length of the filter                               
      0.04,               -- Stabilizer threshold in %                          
      0, 50,              -- Modifier sourceA, sourceB                          
      Config.Surprised.MinShift,                                                
      Config.Surprised.MaxShift                                                 
   )                                                                            
                                                                                
   -- Delete the SurprisedScore form the object. Its only for internal use.     
   -- Copy the score the normale rating, if the score is used.                  
   if identifier == "SurprisedScore" then                                     
      access =                                                                  
      [[                                                                        
         Object.Rating.Surprised = Object.Rating.SurprisedScore                 
         Object.Rating.SurprisedScore = nil                                     
      ]]                                                                        
   else                                                                         
      access =                                                                  
      [[                                                                        
         Object.Rating.SurprisedScore = nil                                     
      ]]                                                                        
   end                                                                          
                                                                                
   engine:AddObjectAccess( selector, access )                                   
end                                                                             
                                                                                
                                                                                
--==============================================================================
function AddAngryAnalyzer( engine, timeBase, updateTimeBase )                   
   -- Only analyze "Face.Front" objects                                       
   local selector = "Object.Type == 'Face.Front'"                             
                                                                                
   -- Model for angry analysis                                                  
   local modelName = "Angry_26x26_2008_10_21_152601"                          
                                                                                
   -- Identifier for the score to use                                           
   local identifier = "AngryScore"                                            
                                                                                
   -- Use the helper function                                                   
   AddAnalyzer(                                                                 
      engine,                                                                   
      timeBase,                                                                 
      updateTimeBase,                                                           
      modelName,          -- Model name                                         
      selector,           -- Object selector                                    
      identifier,         -- Identifier                                         
      0.4,                -- Length of the filter                               
      0.04,               -- Stabilizer threshold in %                          
      10, 100,            -- Modifier sourceA, sourceB                          
      Config.Angry.MinShift,                                                    
      Config.Angry.MaxShift                                                     
   )                                                                            
                                                                                
   -- Delete the AngryScore form the object. Its only for internal use.         
   -- Copy the score the normale rating, if the score is used.                  
   if identifier == "AngryScore" then                                         
      access =                                                                  
      [[                                                                        
         Object.Rating.Angry = Object.Rating.AngryScore                         
         Object.Rating.AngryScore = nil                                         
      ]]                                                                        
   else                                                                         
      access =                                                                  
      [[                                                                        
         Object.Rating.AngryScore = nil                                         
      ]]                                                                        
   end                                                                          
                                                                                
   engine:AddObjectAccess( selector, access )                                   
end                                                                             
                                                                                
                                                                                
--==============================================================================
function AddIdentification( engine, gallery )                                   
   local selector      = "Object.Type == 'Face.Front'"                        
   local modelName     = "FaceFrontIdent_36x45_2008_07_18_123318"             
   local enrollSamples = false                                                  
   local minScore      = -10000                                                 
   local maxIdentities = 5                                                      
   local identityKey   = "Identity"                                           
                                                                                
   RequireModel( modelName )                                                    
                                                                                
   engine:AddIdentification(                                                    
      selector,                                                                 
      modelName,                                                                
      gallery,                                                                  
      enrollSamples,                                                            
      minScore,                                                                 
      maxIdentities,                                                            
      identityKey,                                                              
      identityKey                                                               
   )                                                                            
                                                                                
   for i = 0, maxIdentities - 1 do                                              
      engine:AddRatingModifier(                                                 
         selector,                                                              
         identityKey .. "_" .. tostring( i ),                                 
         -8000, -4500,                                                          
         0, 100,                                                                
         true                                                                   
      )                                                                         
   end                                                                          
end                                                                             
                                                                                
                                                                                
--==============================================================================
function AddObjectScanner( engine,                                              
                           timeBase,                                            
                           updateTimeBase,                                      
                           threadCount,                                         
                           minSize,                                             
                           minScore,                                            
                           trackFaces,                                          
                           trackingType,                                        
                           phantomTrap,                                         
                           modelType )                                          
                                                                                
   -- Single image and video parameters                                         
   local modelName       = ModelType[modelType].ModelName                       
   local objectSelector  = ModelType[modelType].ObjectSelector                  
   local combThreshold   = ModelType[modelType].CombThreshold                   
   local regionLeft      = 0.0                -- Region for scanning            
   local regionTop       = 0.0                                                  
   local regionRight     = 1.0                                                  
   local regionBottom    = 1.0                                                  
   local maxSize         = 1.0                                                  
   local scaleFactor     = 1.24               -- Scaling factor of pyramid      
   local useObjectMerger = true               -- Merge multiple detections      
   local minMergeOverlap = 0.6                -- before thinning them out?      
   local maxCoverage     = 0.2                -- Object thinner parameter       
                                                                                
   -- Additional video parameters                                               
   local trackMargin       = 0.5              -- Tracking margin for objects    
   local useVideoSlicing   = true                                               
   local slicingHistory    = 0.3              -- How long are objects tracked   
   local useMotionFilter   = true                                               
   local useStabilizer     = true             -- Stabilize jittering objects    
   local stabilizerOverlap = 0.95                                               
   local minTrackOverlap   = 0.2                                                
   local minValidationTime = 0.3              -- Min uptime time for validation 
   local filterLength      = 0.3                                                
                                                                                
   local scanner           = nil              -- Temporary scanner handle       
                                                                                
   local memoryRatingKey   = "Memory"         -- Key of internal object memory
                                                                                
   -- Ask for this model, maybe it can be load from file                        
   RequireModel( modelName )                                                    
                                                                                
   -- Check which scanner is needed and ask the engine for the right one        
   -- timeBase > 0 indicates the video mode                                     
   if timeBase > 0 and useVideoSlicing == true then                             
      scanner =                                                                 
         engine:GetSlicedPyramidScanner(                                        
            engine:GetHoneycombScanner(                                         
               modelName,                                                       
               "6x5",                                                         
               combThreshold                                                    
            ),                                                                  
            scaleFactor,                                                        
            timeBase,                                                           
            updateTimeBase,                                                     
            slicingHistory,                                                     
            trackMargin,                                                        
            trackMargin,                                                        
            trackMargin,                                                        
            trackMargin,                                                        
            threadCount                                                         
         )                                                                      
   else                                                                         
      scanner =                                                                 
         engine:GetPyramidScanner(                                              
            engine:GetHoneycombScanner(                                         
               modelName,                                                       
               "6x5",                                                         
               combThreshold                                                    
            ),                                                                  
            scaleFactor,                                                        
            threadCount                                                         
         )                                                                      
   end                                                                          
                                                                                
   -- Use the requested scanner in the image scanner module                     
   engine:AddImageScanner(                                                      
      regionLeft,                                                               
      regionTop,                                                                
      regionRight,                                                              
      regionBottom,                                                             
      minSize,                                                                  
      maxSize,                                                                  
      scanner                                                                   
   )                                                                            
                                                                                
   -- Need merging?                                                             
   if useObjectMerger == true then                                              
      engine:AddObjectMerger(                                                   
         objectSelector,                                                        
         minMergeOverlap,                                                       
         "Score"                                                              
      )                                                                         
   end                                                                          
                                                                                
   -- Now thin out multiple detections                                          
   engine:AddObjectThinner(                                                     
      objectSelector,                                                           
      maxCoverage,                                                              
      "Score"                                                                 
   )                                                                            
                                                                                
   -- Remove objects which have a score below the threshold                     
   engine:AddObjectEraser(                                                      
      objectSelector .. " and Object.Rating.Score < " .. minScore             
   )                                                                            
                                                                                
   -- Add additional video modules in video mode ( timeBase > 0 )               
   if timeBase > 0 then                                                         
      -- Filter the score of the model                                          
      engine:AddRatingFilter(                                                   
         objectSelector,                                                        
         minTrackOverlap,                                                       
         timeBase,                                                              
         updateTimeBase,                                                        
         filterLength,                                                          
         "Score"                                                              
      )                                                                         
                                                                                
      -- Measure the uptime of the faces                                        
      engine:AddObjectTimer(                                                    
         objectSelector,                                                        
         minTrackOverlap,                                                       
         timeBase,                                                              
         updateTimeBase,                                                        
         "true",                                                              
         "Uptime",                                                            
         0.0,                                                                   
         false                                                                  
      )                                                                         
                                                                                
      -- Let only the faces survive which have been detected for a while        
      engine:AddObjectEraser(                                                   
         objectSelector .. " and Object.Rating.Uptime < " .. minValidationTime
      )                                                                         
                                                                                
      -- Faces are classified and deleted or just marked - depending on the mode
      if phantomTrap ~= 'Off' then                                              
         AddPhantomTrap( engine,                                                
                         objectSelector,                                        
                         timeBase,                                              
                         updateTimeBase,                                        
                         phantomTrap )                                          
      end                                                                       
                                                                                
      -- Try to track lost faces                                                
      if trackFaces == true then                                                
         AddObjectTracker( engine, timeBase, updateTimeBase, modelType )        
                                                                                
         -- Overwrite the uptime of tracked faces starting with                 
         -- minValidationTime, because of the eraser above!                     
         engine:AddObjectTimer(                                                 
            objectSelector,                                                     
            minTrackOverlap,                                                    
            timeBase,                                                           
            updateTimeBase,                                                     
            "true",                                                           
            "Uptime",                                                         
            minValidationTime, -- This is the initial time!                     
            false                                                               
         )                                                                      
      end                                                                       
                                                                                
      -- Filter the object positions                                            
      if useMotionFilter == true then                                           
         engine:AddMotionFilter(                                                
            objectSelector,                                                     
            minTrackOverlap,                                                    
            timeBase,                                                           
            updateTimeBase                                                      
         )                                                                      
      end                                                                       
                                                                                
      -- Remove the remaining jitter from the object positions                  
      if useStabilizer == true then                                             
         engine:AddObjectStabilizer(                                            
            objectSelector,                                                     
            stabilizerOverlap,                                                  
            true    -- Stabilize only the region                                
         )                                                                      
      end                                                                       
                                                                                
      -- Change the object properties for tracked faces                         
      if trackFaces == true then                                                
         engine:AddObjectAccess(                                                
            "Object.Rating.Tracking ~= nil",                                  
            [[                                                                  
               Object.Type = "]] .. trackingType .. [["                       
               Object.Marker = {}                                               
            ]]                                                                  
         )                                                                      
      end                                                                       
   end                                                                          
end                                                                             
                                                                                
                                                                                
--==============================================================================
function AddPartScanner( engine,                                                
                         timeBase,                                              
                         updateTimeBase,                                        
                         threadCount,                                           
                         regionLeft,                                            
                         regionTop,                                             
                         regionRight,                                           
                         regionBottom,                                          
                         minSize,                                               
                         maxSize,                                               
                         minScore,                                              
                         scaleFactor,                                           
                         objectType,                                            
                         partModel,                                             
                         partType,                                              
                         partKey,                                               
                         combThreshold )                                        
   -- Single image and video parameters                                         
   local scoreKey          = "Score"                                          
   local objectSelector    = "Object.Type == '" .. objectType .. "'"        
   local partSelector      = "Object.Type == '" .. partType   .. "'"        
   local useObjectMerger   = true         -- Merge multiple detections before   
   local minMergeOverlap   = 0.6          -- thinning them out?                 
   local maxCoverage       = 0.2                                                
                                                                                
   -- Additional video parameters                                               
   local useMotionFilter   = true                                               
   local minTrackOverlap   = 0.2                                                
   local filterLength      = 0.3                                                
                                                                                
   -- Ask for this model, maybe it can be load from file                        
   RequireModel( partModel )                                                    
                                                                                
   -- Add a part scanner for detection of the part                              
   engine:AddPartScanner(                                                       
      objectSelector,                                                           
      regionLeft,                                                               
      regionTop,                                                                
      regionRight,                                                              
      regionBottom,                                                             
      minSize,                                                                  
      maxSize,                                                                  
      engine:GetPyramidScanner(                                                 
         engine:GetHoneycombScanner(                                            
            partModel,                                                          
            "4x3",                                                            
            combThreshold                                                       
         ),                                                                     
         scaleFactor,                                                           
         threadCount                                                            
      )                                                                         
   )                                                                            
                                                                                
   -- Need merging?                                                             
   if useObjectMerger == true then                                              
      engine:AddObjectMerger(                                                   
         partSelector,                                                          
         minMergeOverlap,                                                       
         scoreKey                                                               
      )                                                                         
   end                                                                          
                                                                                
   -- Now thin out multiple detections                                          
   engine:AddObjectThinner(                                                     
      partSelector,                                                             
      maxCoverage,                                                              
      scoreKey                                                                  
   )                                                                            
                                                                                
   -- Remove objects which have a score below the threshold                     
   engine:AddObjectEraser(                                                      
      partSelector .. " and Object.Rating.Score < " .. minScore               
   )                                                                            
                                                                                
   -- In video mode                                                             
   if timeBase > 0 then                                                         
                                                                                
      -- Filter the score of the model                                          
      engine:AddRatingFilter(                                                   
         objectSelector,                                                        
         minTrackOverlap,                                                       
         timeBase,                                                              
         updateTimeBase,                                                        
         filterLength,                                                          
         "Score"                                                              
      )                                                                         
                                                                                
      -- Add a motion filter if desired                                         
      if useMotionFilter == true then                                           
         engine:AddMotionFilter(                                                
            partSelector,                                                       
            minTrackOverlap,                                                    
            timeBase,                                                           
            updateTimeBase                                                      
         )                                                                      
      end                                                                       
   end                                                                          
                                                                                
   -- Now let the detected part be part of the object                           
   engine:AddPartFusion(                                                        
      objectSelector,           -- This is the destination object               
      regionLeft,                                                               
      regionTop,                                                                
      regionRight,                                                              
      regionBottom,                                                             
      minSize,                                                                  
      maxSize,                                                                  
      partSelector,                                                             
      scoreKey,                                                                 
      partKey                                                                   
   )                                                                            
                                                                                
   -- Now remove the remaining detections which cannot be assigned as           
   -- a part to an object.                                                      
   engine:AddObjectEraser(                                                      
      partSelector                                                              
   )                                                                            
end                                                                             
                                                                                
--==============================================================================
function AddPhantomTrap( engine, selector, timebase, updateTimeBase, mode )     
                                                                                
   local modelName  = "Tracking_36x36_2008_08_21_110315"                      
   local patchCount = "PatchCount"                                            
   local minOverlap = 0.3                                                       
                                                                                
   RequireModel( modelName )                                                    
                                                                                
   heuristic =                                                                  
   [[                                                                           
                                                                                
   -- parameters which control this module                                      
   memoryLength   = 30  -- seconds a sample is alive without re-detection       
   minMatch       = 10  -- threshold for the texture comparison                 
   thresholdScore = 85  -- threshold for a sample to be recognized as a face    
   phantomToggle  =  5  -- toggles needed for a sample to become a phantom      
   velOverlap     = 0.2 -- the movement we allow for a pha smp ow it becomes a face
                                                                                
   -- internal parameters, can't be seen outside except in debug mode           
   mode     = '$Mode'   -- values: 'Debug', 'Mark', 'Delete'                    
   UNKNOWN  = "unknown"                                                       
   FACE     = "face"                                                          
   PHANTOM  = "phantom"                                                       
   priority = { [FACE] = 2, [PHANTOM] = 1, [UNKNOWN] = 0 }                      
                                                                                
   samples  = samples or {}                                                     
                                                                                
                                                                                
   --===========================================================================
   -- an object which has no reference to an sample will be added as a new      
   -- sample in the next round                                                  
   function AddNewSamples( objects, samples )                                   
      for k, o in ipairs( objects ) do                                          
         if #o.Matches == 0 then                                                
            local s = Sample( o )                                               
            table.insert( samples,   s )                                        
         end                                                                    
      end                                                                       
   end                                                                          
                                                                                
   --===========================================================================
   -- calculates the Overlap of the regions ar and br                           
   function CalcOverlap( ar, br )                                               
      local a = 0.0                                                             
                                                                                
      if not( ar.Left   > br.Right or br.Left   > ar.Right or                   
              ar.Bottom < br.Top   or br.Bottom < ar.Top ) then                 
                                                                                
         local xl = math.max( ar.Left,   br.Left )                              
         local xt = math.max( ar.Top,    br.Top )                               
         local xr = math.min( ar.Right,  br.Right )                             
         local xb = math.min( ar.Bottom, br.Bottom )                            
                                                                                
         local ra = ( ar.Right - ar.Left ) * ( ar.Bottom - ar.Top );            
         local rb = ( br.Right - br.Left ) * ( br.Bottom - br.Top );            
         local rx = ( xr - xl ) * ( xb - xt );                                  
                                                                                
         a  = ( rx + rx ) / ( ra + rb );                                        
      end                                                                       
                                                                                
      return a                                                                  
   end                                                                          
                                                                                
   --===========================================================================
   -- classifies an object into UNKNOWN, PHANTOM or FACE                        
   function ClassifyObjects( objects )                                          
      for k, o in ipairs( objects ) do                                          
         o.Class = UNKNOWN                                                      
         for l, s in ipairs( o.Matches ) do                                     
            if s.Class == FACE then                                             
               o.Class = FACE                                                   
               break                                                            
            elseif s.Class == PHANTOM then                                      
               o.Class = PHANTOM                                                
            end                                                                 
         end                                                                    
         o.Attribute.Class = o.Class                                            
      end                                                                       
   end                                                                          
                                                                                
   --===========================================================================
   -- used during 'Delete' mode. Phantoms are deleted, no attribute is set      
   function CleanUpDelete( objects )                                            
      local ret = {}                                                            
      for i, o in ipairs( objects ) do                                          
         if o.Class ~= PHANTOM then                                             
            o.Attribute.Class = nil                                             
            table.insert( ret, o )                                              
         end                                                                    
      end                                                                       
      return ret                                                                
   end                                                                          
                                                                                
   --===========================================================================
   -- used during 'Mark' mode. Phantoms are marked with Attribute.Phantom = 'Yes'
   function CleanUpMark( objects )                                              
      for i, o in ipairs( objects ) do                                          
         if o.Class == PHANTOM then                                             
            o.Attribute.Phantom = 'Yes'                                         
         else                                                                   
            o.Attribute.Phantom = 'No'                                          
         end                                                                    
         o.Attribute.Class = nil                                                
      end                                                                       
      return objects                                                            
   end                                                                          
                                                                                
   --===========================================================================
   -- forwards the call to the right function depending on the mode,            
   -- debug does nothing                                                        
   function CleanUpObjects( objects )                                           
      if mode == 'Delete' then                                                  
         return CleanUpDelete( objects )                                        
      elseif mode == 'Mark' then                                                
         return CleanUpMark( objects )                                          
      end                                                                       
   end                                                                          
                                                                                
   --===========================================================================
   -- deletes samples which seem to be more then once in the current list       
   function CleanUpSamples( samples, objects )                                  
      local remain = {}                                                         
      comp = function( a, b ) return priority[a.Class] > priority[b.Class] end  
                                                                                
      for l, s in ipairs( samples ) do                                          
         if #s.Matches == 0 and s.Memory > 0 then                               
            table.insert( remain, s )                                           
         end                                                                    
      end                                                                       
                                                                                
      for i, o in ipairs( objects ) do                                          
         table.sort( o.Matches, comp )                                          
                                                                                
         for l, s in ipairs( o.Matches ) do                                     
            if s.Memory > 0 then                                                
               s.Matches = {}                                                   
               table.insert( remain, s )                                        
               if s.Class ~= UNKNOWN then break end                             
            end                                                                 
         end                                                                    
      end                                                                       
                                                                                
      return remain                                                             
   end                                                                          
                                                                                
   --===========================================================================
   -- finds all references samples have with objects                            
   function Match( objects, samples )                                           
      for k, o in ipairs( objects ) do                                          
         o.Enroll()                                                             
         o.Matches = {}                                                         
                                                                                
         for l, s in ipairs( samples ) do                                       
            local so, sm = s.Verify()                                           
                                                                                
            if sm and sm > minMatch then                                        
               table.insert( o.Matches, s )                                     
               table.insert( s.Matches, o )                                     
            end                                                                 
         end                                                                    
      end                                                                       
   end                                                                          
                                                                                
   --===========================================================================
   -- converts an object into an sample copying some features of the object     
   function Sample( o )                                                         
      local s   = o.Sample()                                                    
      s.Origin  = o.Region                                                      
      s.Memory  = memoryLength                                                  
      s.Toggles = 0                                                             
      s.Visible = true                                                          
      s.Matches = {}                                                            
      s.Class   = UNKNOWN                                                       
      if mode == 'Debug' then s.Region  = o.Region end                          
                                                                                
      return s                                                                  
   end                                                                          
                                                                                
                                                                                
   --===========================================================================
   -- classifies the samples into UNKNOWN, FACE or PHANTOM. This is the heart of
   -- this heuritsic.                                                           
   function UpdateSamples( samples, interval )                                  
      for l, s in ipairs( samples ) do                                          
         local isOne = #s.Matches == 1                                          
         local o     = s.Matches[1]                                             
                                                                                
         if isOne and s.Class ~= PHANTOM then                                   
            o.Enroll()                                                          
            s.Update()                                                          
            if mode == 'Debug' then s.Region = o.Region end                     
         end                                                                    
                                                                                
         s.Memory = isOne and memoryLength or s.Memory - interval               
                                                                                
         if #s.Matches <= 1 and s.Class == UNKNOWN then                         
                                                                                
            if isOne ~= s.Visible then                                          
               s.Visible = not s.Visible                                        
               s.Toggles = s.Toggles + 1                                        
                                                                                
               if s.Toggles > phantomToggle then s.Class = PHANTOM end          
            end                                                                 
                                                                                
            if isOne and ( o.Rating.Score and o.Rating.Score > thresholdScore or 
                           CalcOverlap( s.Origin, o.Region ) < velOverlap ) then
               s.Class = FACE                                                   
            end                                                                 
         end                                                                    
      end                                                                       
   end                                                                          
                                                                                
   --===========================================================================
   -- DEBUG FUNCTIONS                                                           
   --===========================================================================
   -- colorize the objects in debug mode                                        
   function MarkObjects( objects )                                              
      for k, o in ipairs( objects ) do                                          
                                                                                
         local rc = '0, 0, 255'                                                 
         if o.Class == FACE then                                                
            rc = '0, 255, 0'                                                    
         elseif o.Class == PHANTOM then                                         
            rc = '0, 0, 0'                                                      
         end                                                                    
                                                                                
         o.Attribute._RegionColor = rc                                          
      end                                                                       
   end                                                                          
   --===========================================================================
   -- converts a Sample into an Object in debug mode, so we can see the samples 
   function Object( s )                                                         
                                                                                
      return {                                                                  
         Type      = "Patch",                                                 
         Region    = s.Region,                                                  
         Class     = s.Class,                                                   
         Marker    = {},                                                        
         Attribute = {                                                          
            _AttributeDisplay_Toggles = "On",                                 
            _AttributeDisplay_Memory  = "On",                                 
            _AttributeDisplay_Class   = "On",                                 
            Toggles = s.Toggles,                                                
            Memory  = s.Memory,                                                 
            Class   = tostring( s.Class ),                                      
            Matches = #s.Matches,                                               
         },                                                                     
         Rating = {},                                                           
         Part   = {},                                                           
      }                                                                         
   end                                                                          
   --===========================================================================
   -- adds the samples to the object, so that we can see them in Debug mode     
   function ShowSamples( samples, objects )                                     
      for l, s in ipairs( samples ) do                                          
         if s.Memory < memoryLength then                                        
            table.insert( objects, Object( s ) )                                
         end                                                                    
      end                                                                       
   end                                                                          
   --===========================================================================
   --     DEBUG END                                                             
   --===========================================================================
                                                                                
                                                                                
   --===========================================================================
   -- this function is called by the cpp phantomTrap module                     
   return function( objects, interval )                                         
                                                                                
      Match( objects, samples )                                                 
      UpdateSamples( samples, interval )                                        
                                                                                
      ClassifyObjects( objects )                                                
      samples = CleanUpSamples( samples, objects )                              
                                                                                
      AddNewSamples( objects, samples )                                         
                                                                                
      if mode == 'Debug' then                                                   
         ShowSamples( samples, objects )                                        
         MarkObjects( objects )                                                 
      else                                                                      
         objects = CleanUpObjects( objects )                                    
      end                                                                       
                                                                                
      return objects                                                            
   end                                                                          
                                                                                
   ]] -- heuristic end                                                          
   --===========================================================================
                                                                                
   heuristic = string.gsub( heuristic, '$Mode', mode )                          
                                                                                
   engine:AddPhantomTrap(                                                       
      selector,                                                                 
      timebase,                                                                 
      updateTimeBase,                                                           
      minOverlap,                                                               
      modelName,                                                                
      patchCount,                                                               
      heuristic                                                                 
   )                                                                            
end                                                                             
                                                                                
                                                                                
--==============================================================================
function AddObjectTracker( engine, timeBase, updateTimeBase, modelType )        
   local objectSelector = ModelType[modelType].ObjectSelector                   
                                                                                
   -- Select only objects that have a tracking score                            
   local trackingSelector = "Object.Rating.Tracking ~= nil"                   
                                                                                
   -- Model for tracking                                                        
   local trackingModel = "Tracking_36x36_2008_08_21_110315"                   
                                                                                
   -- Tracker parameters                                                        
   local maxDeltaX     = 0.5                                                    
   local maxDeltaY     = 0.5                                                    
   local maxDeltaSize  = 0.3                                                    
   local scaleFactor   = 0.05                                                   
   local scoreKey      = "Tracking"                                           
   local minScore      = -10                                                    
   local templateKey   = "Template"                                           
   local maxTemplates  = 3                                                      
   local minSize       = 24 * 24                                                
                                                                                
   -- Quite complex tracking activator to avoid false tracking                  
   local activator = ModelType[modelType].TrackingActivator                     
                                                                                
   -- Additional video parameters                                               
   local minTrackOverlap = 0.2                                                  
   local filterLength    = 0.3                                                  
                                                                                
   -- Ask for this model, maybe it can be load from file                        
   RequireModel( trackingModel )                                                
                                                                                
   engine:AddObjectTracker(                                                     
      objectSelector,      -- Object selector                                   
      minTrackOverlap,     -- min overlap                                       
      activator,           -- tracking activator                                
      maxDeltaX,           -- max delta-x                                       
      maxDeltaY,           -- max delta-y                                       
      maxDeltaSize,        -- max delta size                                    
      scaleFactor,         -- scale factor for size tracking                    
      trackingModel,       -- the model                                         
      scoreKey,            -- tracking score key                                
      minScore,            -- min tracking score (about [-50:50])               
      templateKey,         -- template count key                                
      maxTemplates,        -- max number of tracking templates                  
      minSize              -- min tracking size                                 
   )                                                                            
                                                                                
   -- Normalize the tracking score to [0,100]                                   
   engine:AddRatingModifier(                                                    
      trackingSelector,                                                         
      scoreKey,                                                                 
      -3, 130,                                                                  
      0,  100,                                                                  
      true                                                                      
   )                                                                            
                                                                                
   -- Calculate the new tracking score, depending on the number of templates.   
   engine:AddObjectAccess(                                                      
      trackingSelector,                                                         
      [[                                                                        
         tracking     = Object.Rating.]] .. scoreKey    .. [[                   
         templates    = Object.Rating.]] .. templateKey .. [[                   
         maxTemplates = ]] .. tostring( maxTemplates )  .. [[                   
         maxTracking  = 100                                                     
                                                                                
         Object.Rating.]] .. templateKey .. [[ = nil                            
         Object.Rating.]] .. scoreKey    .. [[ =                                
            ((maxTemplates - templates) * maxTracking + tracking) / maxTemplates
                                                                                
         Object.Rating.Score       = nil                                        
         Object.Attribute.Rotation = nil                                        
         Object.Attribute.Roll     = nil                                        
         Object.Attribute.Pitch    = nil                                        
         Object.Attribute.Yaw      = nil                                        
      ]]                                                                        
   )                                                                            
                                                                                
   -- Filter the tracking score                                                 
   engine:AddRatingFilter(                                                      
      trackingSelector,                                                         
      minTrackOverlap,                                                          
      timeBase,                                                                 
      updateTimeBase,                                                           
      filterLength,                                                             
      scoreKey                                                                  
   )                                                                            
end                                                                             
                                                                                
                                                                                
--==============================================================================
function AddObjectId( engine,                                                   
                      timeBase,                                                 
                      updateTimeBase,                                           
                      idMemoryLength,                                           
                      idMemoryType )                                            
   local objectSelector  = "string.sub( Object.Type, 1, 5 ) == 'Face.'"       
   local minTrackOverlap = 0.2                                                  
   local idKey           = "Id"                                               
   local initialId       = 0                                                    
   local memoryRatingKey = "Memory"                                           
                                                                                
   local idVerifier      = "FaceFrontId_36x44_2009_08_07_122105"              
   local minMatch        = Config.ObjectId.MinMatch                             
                                                                                
   local maxViewCount    = Config.ObjectId.MaxViewCount                         
   local viewCountKey    = "ViewCount"                                        
   local gallerySizeKey  = "GallerySize"                                      
                                                                                
   if timeBase > 0 then                                                         
      -- Don't memorize the id?                                                 
      if idMemoryLength == 0 then                                               
         -- Provide the objects simply with a track id                          
         engine:AddTrackId(                                                     
            objectSelector,                                                     
            minTrackOverlap,                                                    
            idKey,                                                              
            initialId                                                           
         )                                                                      
      -- idMemoryLength is greater than 0!                                      
      elseif idMemoryType == "Spatial" then                                   
         -- Remember lost objects for a given time period                       
         engine:AddObjectMemory(                                                
            objectSelector,                                                     
            minTrackOverlap,                                                    
            timeBase,                                                           
            updateTimeBase,                                                     
            idMemoryLength,                                                     
            memoryRatingKey                                                     
         )                                                                      
                                                                                
         -- Provide the objects with a track id                                 
         engine:AddTrackId(                                                     
            objectSelector,                                                     
            minTrackOverlap,                                                    
            idKey,                                                              
            initialId                                                           
         )                                                                      
                                                                                
         -- Remove the memorized objects and the memory rating, because         
         -- they are only used internally for id tracking                       
         local memorySelector = objectSelector .. " and Object.Rating." ..    
            memoryRatingKey .. " ~= nil"                                      
         engine:AddObjectEraser( memorySelector )                               
                                                                                
         engine:AddObjectAccess(                                                
            memorySelector,                                                     
            "Object.Rating." .. memoryRatingKey .. " = nil"                 
         )                                                                      
      else                                                                      
         RequireModel( idVerifier )                                             
                                                                                
         -- Provide the objects with a track id                                 
         engine:AddTrackId(                                                     
            objectSelector,                                                     
            minTrackOverlap,                                                    
            idKey,                                                              
            initialId                                                           
         )                                                                      
                                                                                
         engine:AddObjectId(                                                    
            objectSelector,                                                     
            timeBase,                                                           
            updateTimeBase,                                                     
            idVerifier,                                                         
            minMatch,                                                           
            idKey,                                                              
            IdMemoryType[idMemoryType].idKey,                                   
            IdMemoryType[idMemoryType].splitUpLinks,                            
            IdMemoryType[idMemoryType].keepAllLinks,                            
            idMemoryLength,                                                     
            maxViewCount,                                                       
            viewCountKey,                                                       
            gallerySizeKey                                                      
         )                                                                      
      end                                                                       
   end                                                                          
end                                                                             
                                                                                
                                                                                
--==============================================================================
function AddAnalyzer( engine,                                                   
                      timeBase,                                                 
                      updateTimeBase,                                           
                      modelName,                                                
                      selector,                                                 
                      identifier,                                               
                      filterLength,                                             
                      stabilizerThreshold,                                      
                      ratingBoundA,                                             
                      ratingBoundB,                                             
                      minShift,                                                 
                      maxShift )                                                
                                                                                
   -- Make sure the config parameters are valid!                                
   if minShift - maxShift >= 1 then                                             
      error( "invalid minShift or maxShift configuration for " .. identifier )
   end                                                                          
                                                                                
   local range = ratingBoundB - ratingBoundA                                    
                                                                                
   -- Source and target range for analyzer ratings                              
   local modifierSourceA = ratingBoundA + minShift * range                      
   local modifierSourceB = ratingBoundB + maxShift * range                      
   local modifierTargetA = 0                                                    
   local modifierTargetB = 100                                                  
                                                                                
   -- Additional video parameters                                               
   local minTrackOverlap    = 0.2                                               
                                                                                
   -- For clarification name the intended use of identifier                     
   local scoreKey           = identifier                                        
                                                                                
   -- Ask for this model, maybe it can be load from file                        
   RequireModel( modelName )                                                    
                                                                                
   -- Add the basic classification step                                         
   engine:AddAnalyzer( selector, modelName )                                    
                                                                                
   -- Video mode?                                                               
   if timeBase > 0.0 then                                                       
      -- In the video mode do a simple filtering over time, stablize the        
      -- rating and map it to the provided targetA - targetB interval.          
      engine:AddRatingFilter(                                                   
         selector,                                                              
         minTrackOverlap,                                                       
         timeBase,                                                              
         updateTimeBase,                                                        
         filterLength,                                                          
         scoreKey                                                               
      )                                                                         
                                                                                
      -- Get the threshold for the stabilization                                
      threshold = math.abs( stabilizerThreshold *                               
                            ( modifierSourceA - modifierSourceB ) )             
                                                                                
      -- Stablize the rating                                                    
      engine:AddRatingStabilizer(                                               
         selector,                                                              
         minTrackOverlap,                                                       
         scoreKey,                                                              
         threshold                                                              
      )                                                                         
   end                                                                          
                                                                                
   -- Map the rating to provied target                                          
   engine:AddRatingModifier(                                                    
      selector,                                                                 
      scoreKey,                                                                 
      modifierSourceA, modifierSourceB,                                         
      modifierTargetA, modifierTargetB,                                         
      true -- Do clipping?                                                      
   )                                                                            
end                                                                             
                                                                                
                                                                                
--==============================================================================
function RequireModel( modelName )                                              
   -- Check for a registered model                                              
   if CheckModel( modelName ) == false then                                     
      -- If the check fails, we try to load a ctm-file.                         
      local file = io.open( modelName .. ".ctm", "rb" )                     
                                                                                
      -- If the loading failed, we try it in the dir "Model"                  
      if file == nil then                                                       
         file = io.open( "Model/" .. modelName .. ".ctm", "rb" )          
      end                                                                       
                                                                                
      if file ~= nil then                                                       
         local model = file:read( "*a" )                                      
         RegisterModel( modelName, model )                                      
         CacheModel( modelName )                                                
      end                                                                       
   end                                                                          
end                                                                             
                                                                                
                                                                                
